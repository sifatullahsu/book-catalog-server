// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  admin
  customer
}

enum Status {
  pending
  shipped
  delivered
}

model User {
  id         String @id() @default(uuid())
  name       String
  email      String @unique
  password   String
  role       Role
  contactNo  String
  address    String
  profileImg String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  reviewAndRatings ReviewAndRating[]
  orders           Order[]

  @@map("users")
}

model Category {
  id    String @id() @default(uuid())
  title String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  books Book[]

  @@map("categories")
}

model Book {
  id              String   @id() @default(uuid())
  title           String
  author          String
  price           Float
  genre           String
  publicationDate DateTime

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  categoryId String
  categories Category @relation(fields: [categoryId], references: [id])

  reviewAndRatings ReviewAndRating[]

  @@map("books")
}

model ReviewAndRating {
  id     String @id() @default(uuid())
  review String
  rating Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  userId String
  user   User   @relation(fields: [userId], references: [id])

  bookId String
  book   Book   @relation(fields: [bookId], references: [id])

  @@map("reviewAndRatings")
}

model Order {
  id String @id @default(uuid())

  userId String
  user   User   @relation(fields: [userId], references: [id])

  orderedBooks Json
  status       Status @default(pending)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("orders")
}
